// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OVOVAX.Repository.Data;

#nullable disable

namespace OVOVAX.Repository.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250609013836_AddRangeTo")]
    partial class AddRangeTo
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OVOVAX.Core.Entities.Injection.InjectionRecord", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("EggNumber")
                        .HasColumnType("int");

                    b.Property<int>("InjectionSessionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("InjectionTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<double>("VolumeInjected")
                        .HasPrecision(18, 2)
                        .HasColumnType("float(18)");

                    b.HasKey("ID");

                    b.HasIndex("InjectionSessionId");

                    b.ToTable("InjectionRecords");
                });

            modelBuilder.Entity("OVOVAX.Core.Entities.Injection.InjectionSession", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("NumberOfElements")
                        .HasColumnType("int");

                    b.Property<double>("RangeOfInfraredFrom")
                        .HasPrecision(18, 2)
                        .HasColumnType("float(18)");

                    b.Property<double>("RangeOfInfraredTo")
                        .HasPrecision(18, 2)
                        .HasColumnType("float(18)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<double>("StepOfInjection")
                        .HasPrecision(18, 2)
                        .HasColumnType("float(18)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<double>("VolumeOfLiquid")
                        .HasPrecision(18, 2)
                        .HasColumnType("float(18)");

                    b.HasKey("ID");

                    b.ToTable("InjectionSessions");
                });

            modelBuilder.Entity("OVOVAX.Core.Entities.ManualControl.MovementCommand", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Action")
                        .HasColumnType("int");

                    b.Property<int>("Axis")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Direction")
                        .HasColumnType("int");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Speed")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<double>("Step")
                        .HasPrecision(18, 2)
                        .HasColumnType("float(18)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("MovementCommands");
                });

            modelBuilder.Entity("OVOVAX.Core.Entities.Scanner.ScanResult", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<double>("DepthMeasurement")
                        .HasPrecision(18, 2)
                        .HasColumnType("float(18)");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ScanTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("ScanResults");
                });

            modelBuilder.Entity("OVOVAX.Core.Entities.Injection.InjectionRecord", b =>
                {
                    b.HasOne("OVOVAX.Core.Entities.Injection.InjectionSession", "InjectionSession")
                        .WithMany("InjectionRecords")
                        .HasForeignKey("InjectionSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InjectionSession");
                });

            modelBuilder.Entity("OVOVAX.Core.Entities.Injection.InjectionSession", b =>
                {
                    b.Navigation("InjectionRecords");
                });
#pragma warning restore 612, 618
        }
    }
}
